"""empty message

Revision ID: ef6091dfda33
Revises: None
Create Date: 2016-10-31 18:38:41.682632

"""

# revision identifiers, used by Alembic.
revision = 'ef6091dfda33'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Campgrounds', sa.Column('id', sa.Integer(), nullable=False))
    op.drop_constraint(u'Campgrounds_park_id_fk_fkey', 'Campgrounds', type_='foreignkey')
    op.drop_constraint(u'Campgrounds_state_id_fk_fkey', 'Campgrounds', type_='foreignkey')
    op.drop_column('Campgrounds', 'park_id_fk')
    op.drop_column('Campgrounds', 'idnum')
    op.drop_column('Campgrounds', 'state_id_fk')
    op.add_column('Events', sa.Column('id', sa.Integer(), nullable=False))
    op.drop_constraint(u'Events_park_id_fk_fkey', 'Events', type_='foreignkey')
    op.drop_constraint(u'Events_state_id_fk_fkey', 'Events', type_='foreignkey')
    op.drop_column('Events', 'park_id_fk')
    op.drop_column('Events', 'idnum')
    op.drop_column('Events', 'state_id_fk')
    op.add_column('Parks', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('Parks', sa.Column('state_id', sa.Integer(), nullable=True))
    op.drop_constraint(u'Parks_state_id_fk_fkey', 'Parks', type_='foreignkey')
    op.create_foreign_key(None, 'Parks', 'States', ['state_id'], ['id'])
    op.drop_column('Parks', 'idnum')
    op.drop_column('Parks', 'state_id_fk')
    op.add_column('States', sa.Column('id', sa.Integer(), nullable=False))
    op.drop_column('States', 'idnum')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('States', sa.Column('idnum', sa.INTEGER(), server_default=sa.text(u'nextval(\'"States_idnum_seq"\'::regclass)'), nullable=False))
    op.drop_column('States', 'id')
    op.add_column('Parks', sa.Column('state_id_fk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('Parks', sa.Column('idnum', sa.INTEGER(), server_default=sa.text(u'nextval(\'"Parks_idnum_seq"\'::regclass)'), nullable=False))
    op.drop_constraint(None, 'Parks', type_='foreignkey')
    op.create_foreign_key(u'Parks_state_id_fk_fkey', 'Parks', 'States', ['state_id_fk'], ['idnum'])
    op.drop_column('Parks', 'state_id')
    op.drop_column('Parks', 'id')
    op.add_column('Events', sa.Column('state_id_fk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('Events', sa.Column('idnum', sa.INTEGER(), server_default=sa.text(u'nextval(\'"Events_idnum_seq"\'::regclass)'), nullable=False))
    op.add_column('Events', sa.Column('park_id_fk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'Events_state_id_fk_fkey', 'Events', 'States', ['state_id_fk'], ['idnum'])
    op.create_foreign_key(u'Events_park_id_fk_fkey', 'Events', 'Parks', ['park_id_fk'], ['idnum'])
    op.drop_column('Events', 'id')
    op.add_column('Campgrounds', sa.Column('state_id_fk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('Campgrounds', sa.Column('idnum', sa.INTEGER(), server_default=sa.text(u'nextval(\'"Campgrounds_idnum_seq"\'::regclass)'), nullable=False))
    op.add_column('Campgrounds', sa.Column('park_id_fk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'Campgrounds_state_id_fk_fkey', 'Campgrounds', 'States', ['state_id_fk'], ['idnum'])
    op.create_foreign_key(u'Campgrounds_park_id_fk_fkey', 'Campgrounds', 'Parks', ['park_id_fk'], ['idnum'])
    op.drop_column('Campgrounds', 'id')
    ### end Alembic commands ###
